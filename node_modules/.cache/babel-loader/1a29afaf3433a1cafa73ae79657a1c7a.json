{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/EmployeeViewComponents/OnboardingPopup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios/index';\nimport Label from \"reactstrap/es/Label\";\nimport Input from \"reactstrap/es/Input\";\nimport Button from \"reactstrap/es/Button\"; //Popup that allows job title and job description to be changed\n\nvar EditJobPostingPopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditJobPostingPopup, _Component);\n\n  function EditJobPostingPopup(props) {\n    var _this;\n\n    _classCallCheck(this, EditJobPostingPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditJobPostingPopup).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      // event.preventDefault();\n      // axios.post('http://localhost:3001/updateData', this.state);\n      var errorLabel = _this.refs.errorLabel;\n      var form = document.forms.namedItem(\"postingInfo\"); //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      var valid = true;\n\n      if (Object.keys(_this.state.customFields).length > 0) {\n        //Test if made a custom field but left it empty\n        Object.values(_this.state.customFields).forEach(function testForEmpty(item) {\n          console.log(item, item.toString(), item.toString().trim() === \"\");\n\n          if (item.toString().trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please fill out all fields\";\n            valid = false;\n          }\n        });\n      }\n\n      if (valid) {\n        _this.setState({\n          customFields: _this.state.customFields,\n          onBoarding: true\n        }, function () {\n          //callback param ensures that setstate occurs before post\n          //push data via backend\n          console.log('POST');\n          axios.post('http://localhost:3001/updateEmployee', _this.state);\n\n          _this.props.closePopup();\n        });\n      } //this.props.closePopup();\n\n    };\n\n    _this.state = {\n      companyID: _this.props.employee.companyId,\n      employeeID: _this.props.employee.employeeId,\n      employee: _this.props.employee,\n      customFields: _this.props.employee.customFields,\n      onBoarding: _this.props.employee.onBoarding\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Method to toggle popup window..\n\n\n  _createClass(EditJobPostingPopup, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, input) {\n      var arr = this.state.customFields;\n      arr[input] = e.target.value;\n      console.log(e.target.value, input);\n      this.setState(function (prevState) {\n        return {\n          customFields: arr\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup_inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          name: \"postingInfo\",\n          id: \"editable-posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"vertical-center horizontal-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Edit \", this.state.jobTitle)), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Custom Fields\"), React.createElement(\"div\", {\n          id: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, Object.keys(this.state.employee.customFields).map(function (input) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, input), React.createElement(Input, {\n            key: input,\n            id: input,\n            onChange: function onChange(e) {\n              return self.handleChange(e, input);\n            },\n            value: self.employee.customFields[input],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          })));\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"bottomButtons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          ref: \"errorLabel\",\n          className: \"valid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \" \"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Save\")), React.createElement(\"div\", {\n          className: \"col text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"closeButton\",\n          onClick: this.props.closePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Close\")))))))\n      );\n    }\n  }]);\n\n  return EditJobPostingPopup;\n}(Component);\n\nexport default EditJobPostingPopup;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/EmployeeViewComponents/OnboardingPopup.js"],"names":["React","Component","axios","Label","Input","Button","EditJobPostingPopup","props","handleSubmit","event","errorLabel","refs","form","document","forms","namedItem","valid","Object","keys","state","customFields","length","values","forEach","testForEmpty","item","console","log","toString","trim","className","innerHTML","setState","onBoarding","post","closePopup","companyID","employee","companyId","employeeID","employeeId","bind","togglePopup","showPopup","e","input","arr","target","value","prevState","self","jobTitle","map","handleChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios/index'\nimport Label from \"reactstrap/es/Label\";\nimport Input from \"reactstrap/es/Input\";\nimport Button from \"reactstrap/es/Button\";\n\n\n//Popup that allows job title and job description to be changed\nclass EditJobPostingPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            companyID: this.props.employee.companyId,\n            employeeID: this.props.employee.employeeId,\n            employee: this.props.employee,\n            customFields: this.props.employee.customFields,\n            onBoarding: this.props.employee.onBoarding\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.togglePopup = this.togglePopup.bind(this);\n\n    }\n\n//Method to toggle popup window..\n    togglePopup() {\n        this.setState({\n            showPopup: !this.state.showPopup\n        });\n    }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        // event.preventDefault();\n        // axios.post('http://localhost:3001/updateData', this.state);\n\n        let errorLabel = this.refs.errorLabel;\n        let form = document.forms.namedItem(\"postingInfo\");\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n        var valid = true;\n\n        if (Object.keys(this.state.customFields).length > 0) { //Test if made a custom field but left it empty\n            Object.values(this.state.customFields).forEach(function testForEmpty(item) {\n                console.log(item, item.toString(), item.toString().trim() === \"\");\n                if (item.toString().trim() === \"\") {\n                    errorLabel.className = \"invalid\";\n                    errorLabel.innerHTML = \"Please fill out all fields\";\n                    valid = false;\n                }\n            });\n        }\n\n        if (valid) {\n            this.setState({\n                customFields: this.state.customFields,\n                onBoarding: true\n            }, () => { //callback param ensures that setstate occurs before post\n                //push data via backend\n                console.log('POST');\n                axios.post('http://localhost:3001/updateEmployee', this.state);\n                this.props.closePopup();\n            });\n        }\n\n\n        //this.props.closePopup();\n    };\n\n    handleChange(e, input) {\n        let arr = this.state.customFields;\n        arr[input] = e.target.value;\n        console.log(e.target.value, input);\n        this.setState(prevState => ({customFields: arr}));\n    }\n\n\n    render() {\n        let self = this;\n        return (\n            //Form elements with labels and inputs for job title and job description\n\n            <div>\n                <div className='popup'>\n                    <div className='popup_inner'>\n                        <form name=\"postingInfo\" id=\"editable-posting-form\">\n                            <div className=\"header\">\n                                <div className=\"vertical-center horizontal-center\">Edit {this.state.jobTitle}</div>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label>Custom Fields</Label>\n                                <div id=\"fields\">\n                                    {Object.keys(this.state.employee.customFields).map(function (input) {\n                                        return (\n                                            <div>\n                                                <div className=\"row\">\n                                                    <Label>{input}</Label>\n                                                    <Input key={input} id={input} onChange={(e) => self.handleChange(e, input)} value={self.employee.customFields[input]}/>\n\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                                <br/>\n                            </div>\n\n                        </form>\n                        <div className=\"bottomButtons\">\n                            <label ref=\"errorLabel\" className=\"valid\"> </label>\n                            <div className=\"row\">\n                                <div className=\"col text-right\">\n                                    <Button onClick={() => this.handleSubmit()}>Save</Button>\n                                </div>\n                                <div className=\"col text-left\">\n                                    <Button id=\"closeButton\" onClick={this.props.closePopup}>Close</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default EditJobPostingPopup;\n"]},"metadata":{},"sourceType":"module"}