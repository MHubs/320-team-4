{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/PostJobPopup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar PostJobPopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostJobPopup, _Component);\n\n  function PostJobPopup(props) {\n    var _this;\n\n    _classCallCheck(this, PostJobPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostJobPopup).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var form = document.forms.postingInfo;\n      console.log(form.jobTitle.value); //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      _this.setState({\n        jobTitle: form.jobTitle.value,\n        jobDescription: form.jobDescription.value,\n        startDate: form.startDate.value,\n        expirationDate: form.expirationDate.value\n      }, function () {\n        //callback param ensures that setstate occurs before post\n        //push data via backend\n        console.log('POST');\n        axios.post('http://18.216.20.251:3001/putData', _this.state);\n\n        _this.props.closePopup();\n      }); //document.getElementById(\"posting-form\").reset();\n\n    };\n\n    _this.state = {\n      postingID: Math.floor(Math.random() * 100),\n      managerID: 22,\n      jobTitle: '',\n      jobDescription: '',\n      companyID: 1,\n      postingDate: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\n      showPopup: false,\n      startDate: null,\n      expirationDate: null\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Method to toggle popup window..\n\n\n  _createClass(PostJobPopup, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      console.log(\"TOGGLE\");\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"return (\", React.createElement(\"div\", {\n          className: \"popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup_inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          name: \"postingInfo\",\n          onSubmit: this.handleSubmit,\n          id: \"posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Post a Job\"), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: \"jobTitle\",\n          placeholder: \"Job Title\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"jobDescription\",\n          placeholder: \"Job Description\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Posting Date\"), React.createElement(\"input\", {\n          type: \"date\",\n          name: \"startDate\",\n          placeholder: \"Start Date\",\n          value: this.state.startDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Posting Date\"), React.createElement(\"input\", {\n          type: \"date\",\n          name: \"expirationDate\",\n          placeholder: \"Expiration Date\",\n          value: this.state.expirationDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit Job Posting\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          id: \"closeButton\",\n          onClick: this.props.closePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Close\"))))), \");\")\n      );\n    }\n  }]);\n\n  return PostJobPopup;\n}(Component);\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Posting Preview\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.props.jobTitle), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Posting ID: \"), \" \", this.props.postingID), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Date Posted: \"), this.props.postingDate), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Posted by Manager:\"), \" \", this.props.managerID), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.jobDescription), React.createElement(\"button\", {\n        id: \"closeButton\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nexport default PostJobPopup;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/PostJobPopup.js"],"names":["React","Component","axios","PostJobPopup","props","handleSubmit","event","preventDefault","form","document","forms","postingInfo","console","log","jobTitle","value","setState","jobDescription","startDate","expirationDate","post","state","closePopup","postingID","Math","floor","random","managerID","companyID","postingDate","Date","toJSON","slice","replace","showPopup","bind","togglePopup","text","Popup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\n\n\nclass PostJobPopup extends Component{\n  constructor(props){\n      super(props);\n      this.state = {\n          postingID: Math.floor(Math.random()*100),\n          managerID: 22,\n          jobTitle: '',\n          jobDescription: '',\n          companyID: 1,\n          postingDate:  new Date().toJSON().slice(0,10).replace(/-/g,'/'),\n          showPopup: false,\n          startDate: null,\n          expirationDate: null,\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.togglePopup = this.togglePopup.bind(this);\n\n  }\n\n//Method to toggle popup window..\n  togglePopup() {\n    console.log(\"TOGGLE\")\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let form = document.forms.postingInfo;\n        console.log(form.jobTitle.value)\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n        this.setState({\n          jobTitle: form.jobTitle.value,\n          jobDescription: form.jobDescription.value,\n          startDate: form.startDate.value,\n          expirationDate: form.expirationDate.value,\n      },() => { //callback param ensures that setstate occurs before post\n        //push data via backend\n        console.log('POST')\n        axios.post('http://18.216.20.251:3001/putData', this.state)\n        this.props.closePopup()\n      });\n      //document.getElementById(\"posting-form\").reset();\n\n      }\n\n\n  render(){\n\n      return(\n        //Form elements with labels and inputs for job title and job description\n        <div>\n      return (\n      <div className='popup'>\n        <div className='popup_inner'>\n        <form name=\"postingInfo\" onSubmit={this.handleSubmit} id=\"posting-form\">\n          <div className=\"header\">Post a Job</div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"jobTitle\" placeholder=\"Job Title\" value ={this.state.text}/>\n              <input type=\"text\" name=\"jobDescription\" placeholder=\"Job Description\" value ={this.state.text}/>\n              <br></br>\n              <label>Posting Date</label>\n              <input type=\"date\" name=\"startDate\" placeholder=\"Start Date\" value ={this.state.startDate}/>\n              <br></br>\n              <label>Posting Date</label>\n              <input type=\"date\" name=\"expirationDate\" placeholder=\"Expiration Date\" value ={this.state.expirationDate}/>\n              <input type=\"submit\" value=\"Submit Job Posting\" />\n              <button id =\"closeButton\" onClick={this.props.closePopup}>Close</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n    </div>\n\n  );\n  }\n\n\n\n\n}\n\nclass Popup extends React.Component {\n\n  render() {\n\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n        <h1>Posting Preview</h1>\n          <h2>{this.props.jobTitle}</h2>\n          <h4><b>Posting ID: </b> {this.props.postingID}</h4>\n          <h4><b>Date Posted: </b>{this.props.postingDate}</h4>\n          <h4><b>Posted by Manager:</b> {this.props.managerID}</h4>\n          <h3>{this.props.jobDescription}</h3>\n          <button id =\"closeButton\" onClick={this.props.closePopup}>Done</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default PostJobPopup;\n"]},"metadata":{},"sourceType":"module"}