{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/ManagerViewComponents/ManageJobPostingsComponent/EditableJobPostingCards.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Container, Row, Col, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport ManageableJobPostingCard from \"./ManageableJobPostingCard\"; //Called by ManagePostings.JS\n//Modified version of JobPostingCards that has edit and delete functionality\n//Renders EditJobPostingPopup.js if edit button is pressed\n//Deletes job if delete button is pressed\n\nvar EditableJobPostingCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditableJobPostingCards, _Component);\n\n  function EditableJobPostingCards(props) {\n    var _this;\n\n    _classCallCheck(this, EditableJobPostingCards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableJobPostingCards).call(this, props));\n    console.log(_this.props);\n    _this.state = {\n      jobsList: _this.props.jobs.reverse(),\n      currentPage: 1,\n      jobsPerPage: 6\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toStart = _this.toStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toLast = _this.toLast.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Handle clicks when navigation buttons are pressed\n\n\n  _createClass(EditableJobPostingCards, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"toStart\",\n    value: function toStart(event) {\n      this.setState({\n        currentPage: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          jobs = _this$state.jobsList,\n          currentPage = _this$state.currentPage,\n          jobsPerPage = _this$state.jobsPerPage; // Logic for displaying current jobPostings\n\n      var indexOfLastJobPosting = currentPage * jobsPerPage;\n      var indexOfFirstJobPosting = indexOfLastJobPosting - jobsPerPage;\n      var currentJobPosting = jobs.slice(indexOfFirstJobPosting, indexOfLastJobPosting); //Logic for displaying 6 cards per page\n\n      var JobPostingCardArray = currentJobPosting.map(function (object, index) {\n        console.log(index);\n\n        if (index % 6 === 0) {\n          console.log(\"Using \" + index);\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"c1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \" \", React.createElement(ManageableJobPostingCard, {\n            invisible: (currentPage - 1) * 6 + index % 6 >= jobs.length,\n            job: jobs[(currentPage - 1) * 6 + index % 6],\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"c2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \" \", React.createElement(ManageableJobPostingCard, {\n            invisible: (currentPage - 1) * 6 + (index + 1) % 6 >= jobs.length,\n            job: jobs[(currentPage - 1) * 6 + (index + 1) % 6],\n            key: index + 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"c3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, \" \", React.createElement(ManageableJobPostingCard, {\n            invisible: (currentPage - 1) * 6 + (index + 2) % 6 >= jobs.length,\n            job: jobs[(currentPage - 1) * 6 + (index + 2) % 6],\n            key: index + 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"c4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \" \", React.createElement(ManageableJobPostingCard, {\n            invisible: (currentPage - 1) * 6 + (index + 3) % 6 >= jobs.length,\n            job: jobs[(currentPage - 1) * 6 + (index + 3) % 6],\n            key: index + 3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"c5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \" \", React.createElement(ManageableJobPostingCard, {\n            invisible: (currentPage - 1) * 6 + (index + 4) % 6 >= jobs.length,\n            job: jobs[(currentPage - 1) * 6 + (index + 4) % 6],\n            key: index + 4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"c6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \" \", React.createElement(ManageableJobPostingCard, {\n            invisible: (currentPage - 1) * 6 + (index + 5) % 6 >= jobs.length,\n            job: jobs[(currentPage - 1) * 6 + (index + 5) % 6],\n            key: index + 5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }))));\n        }\n      }); // Logic for displaying page numbers\n\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(jobs.length / jobsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(PaginationItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(PaginationLink, {\n          key: number,\n          id: number,\n          onClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, number)));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, JobPostingCardArray, React.createElement(Pagination, {\n        \"aria-label\": \"Page navigation\",\n        style: {\n          position: \"absolute\",\n          top: \"90%\",\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        previous: true,\n        onClick: this.toStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), renderPageNumbers, React.createElement(PaginationItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(PaginationLink, {\n        next: true,\n        onClick: this.toLast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"toLast\",\n    value: function toLast(event) {\n      this.setState({\n        currentPage: Math.ceil(this.state.jobsList.length / 6)\n      });\n    }\n  }]);\n\n  return EditableJobPostingCards;\n}(Component);\n\nexport default EditableJobPostingCards;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/ManagerViewComponents/ManageJobPostingsComponent/EditableJobPostingCards.js"],"names":["React","Component","axios","Container","Row","Col","Pagination","PaginationItem","PaginationLink","ManageableJobPostingCard","EditableJobPostingCards","props","console","log","state","jobsList","jobs","reverse","currentPage","jobsPerPage","handleClick","bind","toStart","toLast","event","setState","Number","target","id","indexOfLastJobPosting","indexOfFirstJobPosting","currentJobPosting","slice","JobPostingCardArray","map","object","index","length","pageNumbers","i","Math","ceil","push","renderPageNumbers","number","position","top","padding"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyCC,cAAzC,EAAyDC,cAAzD,QAA8E,YAA9E;AACA,OAAOC,wBAAP,MAAqC,4BAArC,C,CAEA;AACA;AACA;AACA;;IACMC,uB;;;;;AACF,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iGAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKF,KAAjB;AACA,UAAKG,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MAAKJ,KAAL,CAAWK,IAAX,CAAgBC,OAAhB,EADD;AAETC,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AACA,UAAKE,MAAL,GAAc,MAAKA,MAAL,CAAYF,IAAZ,uDAAd;AAVe;AAWlB,G,CAED;;;;;gCACYG,K,EAAO;AACf,WAAKC,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAEQ,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd;AADT,OAAd;AAGH;;;4BAEOJ,K,EAAO;AACX,WAAKC,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH;;;6BAEQ;AAAA;;AAAA,wBAC8C,KAAKJ,KADnD;AAAA,UACYE,IADZ,eACED,QADF;AAAA,UACkBG,WADlB,eACkBA,WADlB;AAAA,UAC+BC,WAD/B,eAC+BA,WAD/B,EAGL;;AACA,UAAMU,qBAAqB,GAAGX,WAAW,GAAGC,WAA5C;AACA,UAAMW,sBAAsB,GAAGD,qBAAqB,GAAGV,WAAvD;AACA,UAAMY,iBAAiB,GAAGf,IAAI,CAACgB,KAAL,CAAWF,sBAAX,EAAmCD,qBAAnC,CAA1B,CANK,CASL;;AACA,UAAII,mBAAmB,GAAGF,iBAAiB,CAACG,GAAlB,CAAsB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACrExB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;;AACA,YAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACjBxB,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAWuB,KAAvB;AACA,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACY;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB,oBAAC,wBAAD;AACjB,YAAA,SAAS,EAAE,CAAClB,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAyBkB,KAAD,GAAU,CAAlC,IAAuCpB,IAAI,CAACqB,MADtC;AAEjB,YAAA,GAAG,EAAErB,IAAI,CAAC,CAACE,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwBkB,KAAK,GAAG,CAAjC,CAFQ;AAGjB,YAAA,GAAG,EAAEA,KAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CADZ,EAMY;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB,oBAAC,wBAAD;AACjB,YAAA,SAAS,EAAE,CAAClB,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAtC,IAA2CpB,IAAI,CAACqB,MAD1C;AAEjB,YAAA,GAAG,EAAErB,IAAI,CAAC,CAACE,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAvC,CAFQ;AAGjB,YAAA,GAAG,EAAEA,KAAK,GAAG,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CANZ,EAWY;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB,oBAAC,wBAAD;AACjB,YAAA,SAAS,EAAE,CAAClB,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAtC,IAA2CpB,IAAI,CAACqB,MAD1C;AAEjB,YAAA,GAAG,EAAErB,IAAI,CAAC,CAACE,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAvC,CAFQ;AAGjB,YAAA,GAAG,EAAEA,KAAK,GAAG,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CAXZ,EAgBY;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB,oBAAC,wBAAD;AACjB,YAAA,SAAS,EAAE,CAAClB,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAtC,IAA2CpB,IAAI,CAACqB,MAD1C;AAEjB,YAAA,GAAG,EAAErB,IAAI,CAAC,CAACE,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAvC,CAFQ;AAGjB,YAAA,GAAG,EAAEA,KAAK,GAAG,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CAhBZ,EAqBY;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB,oBAAC,wBAAD;AACjB,YAAA,SAAS,EAAE,CAAClB,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAtC,IAA2CpB,IAAI,CAACqB,MAD1C;AAEjB,YAAA,GAAG,EAAErB,IAAI,CAAC,CAACE,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAvC,CAFQ;AAGjB,YAAA,GAAG,EAAEA,KAAK,GAAG,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CArBZ,EA0BY;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB,oBAAC,wBAAD;AACjB,YAAA,SAAS,EAAE,CAAClB,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAtC,IAA2CpB,IAAI,CAACqB,MAD1C;AAEjB,YAAA,GAAG,EAAErB,IAAI,CAAC,CAACE,WAAW,GAAG,CAAf,IAAoB,CAApB,GAAwB,CAACkB,KAAK,GAAG,CAAT,IAAc,CAAvC,CAFQ;AAGjB,YAAA,GAAG,EAAEA,KAAK,GAAG,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,CA1BZ,CADJ,CADJ;AAmCH;AAEJ,OAzCyB,CAA1B,CAVK,CAsDL;;AACA,UAAME,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUzB,IAAI,CAACqB,MAAL,GAAclB,WAAxB,CAArB,EAA2DoB,CAAC,EAA5D,EAAgE;AAC5DD,QAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACH;;AAED,UAAMI,iBAAiB,GAAGL,WAAW,CAACJ,GAAZ,CAAgB,UAAAU,MAAM,EAAI;AAChD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,cAAD;AACI,UAAA,GAAG,EAAEA,MADT;AAEI,UAAA,EAAE,EAAEA,MAFR;AAGI,UAAA,OAAO,EAAE,MAAI,CAACxB,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKwB,MALL,CADJ,CADJ,CADJ;AAaH,OAdyB,CAA1B;AAgBA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,mBADL,EAEI,oBAAC,UAAD;AAAY,sBAAW,iBAAvB;AAAyC,QAAA,KAAK,EAAE;AAACY,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,GAAG,EAAE,KAA5B;AAAmCC,UAAAA,OAAO,EAAE;AAA5C,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,QAAQ,MAAxB;AAAyB,QAAA,OAAO,EAAE,KAAKzB,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKQqB,iBALR,EAOI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,OAAO,EAAE,KAAKpB,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,CAFJ,CADJ;AAiBH;;;2BAEMC,K,EAAO;AACV,WAAKC,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAEsB,IAAI,CAACC,IAAL,CAAU,KAAK3B,KAAL,CAAWC,QAAX,CAAoBsB,MAApB,GAA6B,CAAvC;AADH,OAAd;AAGH;;;;EA9HiCpC,S;;AAkItC,eAAeS,uBAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport {Container, Row, Col, Pagination, PaginationItem, PaginationLink} from 'reactstrap';\nimport ManageableJobPostingCard from \"./ManageableJobPostingCard\";\n\n//Called by ManagePostings.JS\n//Modified version of JobPostingCards that has edit and delete functionality\n//Renders EditJobPostingPopup.js if edit button is pressed\n//Deletes job if delete button is pressed\nclass EditableJobPostingCards extends Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props);\n        this.state = {\n            jobsList: this.props.jobs.reverse(),\n            currentPage: 1,\n            jobsPerPage: 6\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.toStart = this.toStart.bind(this);\n        this.toLast = this.toLast.bind(this);\n    }\n\n    //Handle clicks when navigation buttons are pressed\n    handleClick(event) {\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n\n    toStart(event) {\n        this.setState({\n            currentPage: 1\n        });\n    }\n\n    render() {\n        const {jobsList: jobs, currentPage, jobsPerPage} = this.state;\n\n        // Logic for displaying current jobPostings\n        const indexOfLastJobPosting = currentPage * jobsPerPage;\n        const indexOfFirstJobPosting = indexOfLastJobPosting - jobsPerPage;\n        const currentJobPosting = jobs.slice(indexOfFirstJobPosting, indexOfLastJobPosting);\n\n\n        //Logic for displaying 6 cards per page\n        let JobPostingCardArray = currentJobPosting.map(function (object, index) {\n            console.log(index);\n            if (index % 6 === 0) {\n                console.log(\"Using \" + index);\n                return (\n                    <div>\n                        <div className=\"row\">\n                                    <div className=\"c1\"> <ManageableJobPostingCard\n                                        invisible={(currentPage - 1) * 6 + (index) % 6 >= jobs.length}\n                                        job={jobs[(currentPage - 1) * 6 + index % 6]}\n                                        key={index}/>\n                                    </div>\n                                    <div className=\"c2\"> <ManageableJobPostingCard\n                                        invisible={(currentPage - 1) * 6 + (index + 1) % 6 >= jobs.length}\n                                        job={jobs[(currentPage - 1) * 6 + (index + 1) % 6]}\n                                        key={index + 1}/>\n                                    </div>\n                                    <div className=\"c3\"> <ManageableJobPostingCard\n                                        invisible={(currentPage - 1) * 6 + (index + 2) % 6 >= jobs.length}\n                                        job={jobs[(currentPage - 1) * 6 + (index + 2) % 6]}\n                                        key={index + 2}/>\n                                    </div>\n                                    <div className=\"c4\"> <ManageableJobPostingCard\n                                        invisible={(currentPage - 1) * 6 + (index + 3) % 6 >= jobs.length}\n                                        job={jobs[(currentPage - 1) * 6 + (index + 3) % 6]}\n                                        key={index + 3}/>\n                                    </div>\n                                    <div className=\"c5\"> <ManageableJobPostingCard\n                                        invisible={(currentPage - 1) * 6 + (index + 4) % 6 >= jobs.length}\n                                        job={jobs[(currentPage - 1) * 6 + (index + 4) % 6]}\n                                        key={index + 4}/>\n                                    </div>\n                                    <div className=\"c6\"> <ManageableJobPostingCard\n                                        invisible={(currentPage - 1) * 6 + (index + 5) % 6 >= jobs.length}\n                                        job={jobs[(currentPage - 1) * 6 + (index + 5) % 6]}\n                                        key={index + 5}/>\n                                    </div>\n                        </div>\n                    </div>)\n            }\n\n        });\n\n\n        // Logic for displaying page numbers\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(jobs.length / jobsPerPage); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <div>\n                    <PaginationItem>\n                        <PaginationLink\n                            key={number}\n                            id={number}\n                            onClick={this.handleClick}\n                        >\n                            {number}\n                        </PaginationLink>\n                    </PaginationItem>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                {JobPostingCardArray}\n                <Pagination aria-label=\"Page navigation\" style={{position: \"absolute\", top: \"90%\", padding: \"10px\"}}>\n                    <PaginationItem>\n                        <PaginationLink previous onClick={this.toStart}/>\n                    </PaginationItem>\n                    {\n                        renderPageNumbers\n                    }\n                    <PaginationItem>\n                        <PaginationLink next onClick={this.toLast}/>\n                    </PaginationItem>\n                </Pagination>\n            </div>\n\n        );\n    }\n\n    toLast(event) {\n        this.setState({\n            currentPage: Math.ceil(this.state.jobsList.length / 6)\n        });\n    }\n}\n\n\nexport default EditableJobPostingCards;\n\n\n"]},"metadata":{},"sourceType":"module"}