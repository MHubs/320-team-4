{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/ManagerViewComponents/ManageJobPostingsComponent/EditJobPostingPopup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Label from \"reactstrap/es/Label\";\nimport Input from \"reactstrap/es/Input\";\nimport Button from \"reactstrap/es/Button\"; //Popup that allows job title and job description to be changed\n\nvar EditJobPostingPopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditJobPostingPopup, _Component);\n\n  function EditJobPostingPopup(props) {\n    var _this;\n\n    _classCallCheck(this, EditJobPostingPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditJobPostingPopup).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      // event.preventDefault();\n      // axios.post('http://localhost:3001/updateData', this.state);\n      var errorLabel = _this.refs.errorLabel;\n      var form = document.forms.namedItem(\"postingInfo\"); //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      var valid = true;\n\n      if (form.jobTitle.value.trim() === \"\") {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter a valid job title\";\n        valid = false;\n      } else if (form.jobDescription.value.trim() === \"\") {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter a valid job description\";\n        valid = false;\n      } else if (form.startDate.value !== \"\") {\n        if (isNaN(new Date(form.startDate.value))) {\n          errorLabel.className = \"invalid\";\n          errorLabel.innerHTML = \"Please enter a valid start date\";\n          valid = false;\n        }\n      }\n\n      if (form.expirationDate.value !== \"\") {\n        if (isNaN(new Date(form.expirationDate.value))) {\n          errorLabel.className = \"invalid\";\n          errorLabel.innerHTML = \"Please enter a valid expiration date\";\n          valid = false;\n        }\n      }\n\n      if (Object.keys(_this.state.customFields).length > 0) {\n        //Test if made a custom field but left it empty\n        Object.values(_this.state.customFields).forEach(function testForEmpty(item) {\n          console.log(item, item.toString(), item.toString().trim() === \"\");\n\n          if (item.toString().trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please fill out all created custom fields\";\n            valid = false;\n          }\n        });\n      }\n\n      if (valid) {\n        _this.setState({\n          jobTitle: form.jobTitle.value,\n          jobDescription: form.jobDescription.value,\n          startDate: form.startDate.value,\n          expirationDate: form.expirationDate.value,\n          customFieldValues: Object.values(_this.state.customFields)\n        }, function () {\n          //callback param ensures that setstate occurs before post\n          //push data via backend\n          console.log('POST');\n          axios.post('http://localhost:3001/updateData', _this.state);\n\n          _this.props.closePopup();\n\n          window.location.reload();\n        });\n      } //this.props.closePopup();\n\n    };\n\n    _this.state = {\n      job: _this.props.job,\n      jobTitle: _this.props.job.title,\n      jobDescription: _this.props.job.description,\n      startDate: _this.props.job.startDate,\n      expirationDate: _this.props.job.postingExpirationDate,\n      customFields: {},\n      customFieldValues: _this.props.job.customFields,\n      customFieldsCounter: _this.props.job.customFields.length\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTitleChange = _this.handleTitleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDescriptionChange = _this.handleDescriptionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStartChange = _this.handleStartChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleExpirationChange = _this.handleExpirationChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var i;\n\n    for (i = 0; i < _this.props.job.customFields.length; i++) {\n      var newInput = \"custom-\".concat(i);\n      _this.state.customFields[newInput] = _this.props.job.customFields[i];\n    }\n\n    return _this;\n  } //Method to toggle popup window..\n\n\n  _createClass(EditJobPostingPopup, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"handleTitleChange\",\n    value: function handleTitleChange(event) {\n      this.setState({\n        jobTitle: event.target.value\n      });\n    }\n  }, {\n    key: \"handleDescriptionChange\",\n    value: function handleDescriptionChange(event) {\n      this.setState({\n        jobDescription: event.target.value\n      });\n    }\n  }, {\n    key: \"handleStartChange\",\n    value: function handleStartChange(event) {\n      this.setState({\n        startDate: event.target.value\n      });\n    }\n  }, {\n    key: \"handleExpirationChange\",\n    value: function handleExpirationChange(event) {\n      this.setState({\n        expirationDate: event.target.value\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"addField\",\n    value: function addField() {\n      var newInput = \"custom-\".concat(this.state.customFieldsCounter);\n      this.state.customFields[newInput] = \"\";\n      this.setState(function (prevState) {\n        return {\n          customFieldsCounter: prevState.customFieldsCounter + 1\n        };\n      });\n    }\n  }, {\n    key: \"deleteInput\",\n    value: function deleteInput(input) {\n      console.log(input);\n      var arr = this.state.customFields;\n      delete arr[input];\n      this.setState(function (prevState) {\n        return {\n          customFields: arr\n        };\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, input) {\n      var arr = this.state.customFields;\n      arr[input] = e.target.value;\n      console.log(e.target.value, input);\n      this.setState(function (prevState) {\n        return {\n          customFields: arr\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup_inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          name: \"postingInfo\",\n          id: \"editable-posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"vertical-center horizontal-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Edit \", this.state.jobTitle)), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Job Title\"), React.createElement(Input, {\n          type: \"text\",\n          id: \"jobTitle\",\n          name: \"jobTitle\",\n          value: this.state.jobTitle,\n          onChange: this.handleTitleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"Job Description\"), React.createElement(Input, {\n          type: \"text\",\n          value: this.state.jobDescription,\n          name: \"jobDescription\",\n          placeholder: \"Job Description\",\n          onChange: this.handleDescriptionChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Start Date\"), React.createElement(Input, {\n          type: \"date\",\n          name: \"startDate\",\n          placeholder: \"Start Date\",\n          value: this.state.startDate,\n          onChange: this.handleStartChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Expiration Date\"), React.createElement(Input, {\n          type: \"date\",\n          name: \"expirationDate\",\n          placeholder: \"Expiration Date\",\n          value: this.state.expirationDate,\n          onChange: this.handleExpirationChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Custom Fields\"), React.createElement(\"div\", {\n          id: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, Object.keys(this.state.customFields).map(function (input) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, React.createElement(Input, {\n            key: input,\n            id: input,\n            onChange: function onChange(e) {\n              return self.handleChange(e, input);\n            },\n            value: self.state.customFields[input],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col-sm-3 text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, React.createElement(Button, {\n            onClick: function onClick() {\n              return self.deleteInput(input);\n            },\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, \"Delete\"))), React.createElement(\"br\", {\n            className: \"inputBr\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }));\n        })), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-3 text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"addCustom\",\n          name: \"Add Custom\",\n          placeholder: \"Add Field\",\n          onClick: function onClick() {\n            return _this2.addField();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"Add Field\")), React.createElement(\"div\", {\n          className: \"col text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(Label, {\n          style: {\n            opacity: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \" \"))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"bottomButtons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          ref: \"errorLabel\",\n          className: \"valid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \" \"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Save\")), React.createElement(\"div\", {\n          className: \"col text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"closeButton\",\n          onClick: this.props.closePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"Close\")))))))\n      );\n    }\n  }]);\n\n  return EditJobPostingPopup;\n}(Component);\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Posting Preview\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, this.props.jobTitle), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"First Name: \"), \" \", this.props.fname), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Last Name: \"), this.props.lname), React.createElement(\"button\", {\n        id: \"closeButton\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nexport default EditJobPostingPopup;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/ManagerViewComponents/ManageJobPostingsComponent/EditJobPostingPopup.js"],"names":["React","Component","axios","Label","Input","Button","EditJobPostingPopup","props","handleSubmit","event","errorLabel","refs","form","document","forms","namedItem","valid","jobTitle","value","trim","className","innerHTML","jobDescription","startDate","isNaN","Date","expirationDate","Object","keys","state","customFields","length","values","forEach","testForEmpty","item","console","log","toString","setState","customFieldValues","post","closePopup","window","location","reload","job","title","description","postingExpirationDate","customFieldsCounter","bind","togglePopup","handleTitleChange","handleDescriptionChange","handleStartChange","handleExpirationChange","i","newInput","showPopup","target","prevState","input","arr","e","self","map","handleChange","deleteInput","addField","opacity","Popup","fname","lname"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAGA;;IACMC,mB;;;;;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;;AADe,UAmDnBC,YAnDmB,GAmDJ,UAACC,KAAD,EAAW;AACtB;AACA;AAEA,UAAIC,UAAU,GAAG,MAAKC,IAAL,CAAUD,UAA3B;AACA,UAAIE,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAeC,SAAf,CAAyB,aAAzB,CAAX,CALsB,CAMtB;AACA;AACA;;AAEA,UAAIC,KAAK,GAAG,IAAZ;;AACA,UAAIJ,IAAI,CAACK,QAAL,CAAcC,KAAd,CAAoBC,IAApB,OAA+B,EAAnC,EAAuC;AACnCT,QAAAA,UAAU,CAACU,SAAX,GAAuB,SAAvB;AACAV,QAAAA,UAAU,CAACW,SAAX,GAAuB,gCAAvB;AACAL,QAAAA,KAAK,GAAG,KAAR;AACH,OAJD,MAIO,IAAIJ,IAAI,CAACU,cAAL,CAAoBJ,KAApB,CAA0BC,IAA1B,OAAqC,EAAzC,EAA6C;AAChDT,QAAAA,UAAU,CAACU,SAAX,GAAuB,SAAvB;AACAV,QAAAA,UAAU,CAACW,SAAX,GAAuB,sCAAvB;AACAL,QAAAA,KAAK,GAAG,KAAR;AACH,OAJM,MAIA,IAAIJ,IAAI,CAACW,SAAL,CAAeL,KAAf,KAAyB,EAA7B,EAAiC;AACpC,YAAIM,KAAK,CAAC,IAAIC,IAAJ,CAASb,IAAI,CAACW,SAAL,CAAeL,KAAxB,CAAD,CAAT,EAA2C;AACvCR,UAAAA,UAAU,CAACU,SAAX,GAAuB,SAAvB;AACAV,UAAAA,UAAU,CAACW,SAAX,GAAuB,iCAAvB;AACAL,UAAAA,KAAK,GAAG,KAAR;AACH;AACJ;;AACD,UAAIJ,IAAI,CAACc,cAAL,CAAoBR,KAApB,KAA8B,EAAlC,EAAsC;AAClC,YAAIM,KAAK,CAAC,IAAIC,IAAJ,CAASb,IAAI,CAACc,cAAL,CAAoBR,KAA7B,CAAD,CAAT,EAAgD;AAC5CR,UAAAA,UAAU,CAACU,SAAX,GAAuB,SAAvB;AACAV,UAAAA,UAAU,CAACW,SAAX,GAAuB,sCAAvB;AACAL,UAAAA,KAAK,GAAG,KAAR;AACH;AACJ;;AACD,UAAIW,MAAM,CAACC,IAAP,CAAY,MAAKC,KAAL,CAAWC,YAAvB,EAAqCC,MAArC,GAA8C,CAAlD,EAAqD;AAAE;AACnDJ,QAAAA,MAAM,CAACK,MAAP,CAAc,MAAKH,KAAL,CAAWC,YAAzB,EAAuCG,OAAvC,CAA+C,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACvEC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBA,IAAI,CAACG,QAAL,EAAlB,EAAmCH,IAAI,CAACG,QAAL,GAAgBnB,IAAhB,OAA2B,EAA9D;;AACA,cAAIgB,IAAI,CAACG,QAAL,GAAgBnB,IAAhB,OAA2B,EAA/B,EAAmC;AAC/BT,YAAAA,UAAU,CAACU,SAAX,GAAuB,SAAvB;AACAV,YAAAA,UAAU,CAACW,SAAX,GAAuB,2CAAvB;AACAL,YAAAA,KAAK,GAAG,KAAR;AACH;AACJ,SAPD;AAQH;;AAED,UAAIA,KAAJ,EAAW;AACP,cAAKuB,QAAL,CAAc;AACVtB,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAL,CAAcC,KADd;AAEVI,UAAAA,cAAc,EAAEV,IAAI,CAACU,cAAL,CAAoBJ,KAF1B;AAGVK,UAAAA,SAAS,EAAEX,IAAI,CAACW,SAAL,CAAeL,KAHhB;AAIVQ,UAAAA,cAAc,EAAEd,IAAI,CAACc,cAAL,CAAoBR,KAJ1B;AAKVsB,UAAAA,iBAAiB,EAAEb,MAAM,CAACK,MAAP,CAAc,MAAKH,KAAL,CAAWC,YAAzB;AALT,SAAd,EAMG,YAAM;AAAE;AACP;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAnC,UAAAA,KAAK,CAACuC,IAAN,CAAW,kCAAX,EAA+C,MAAKZ,KAApD;;AACA,gBAAKtB,KAAL,CAAWmC,UAAX;;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SAZD;AAaH,OA1DqB,CA6DtB;;AACH,KAjHkB;;AAEf,UAAKhB,KAAL,GAAa;AACTiB,MAAAA,GAAG,EAAE,MAAKvC,KAAL,CAAWuC,GADP;AAET7B,MAAAA,QAAQ,EAAE,MAAKV,KAAL,CAAWuC,GAAX,CAAeC,KAFhB;AAGTzB,MAAAA,cAAc,EAAE,MAAKf,KAAL,CAAWuC,GAAX,CAAeE,WAHtB;AAITzB,MAAAA,SAAS,EAAE,MAAKhB,KAAL,CAAWuC,GAAX,CAAevB,SAJjB;AAKTG,MAAAA,cAAc,EAAE,MAAKnB,KAAL,CAAWuC,GAAX,CAAeG,qBALtB;AAMTnB,MAAAA,YAAY,EAAE,EANL;AAOTU,MAAAA,iBAAiB,EAAE,MAAKjC,KAAL,CAAWuC,GAAX,CAAehB,YAPzB;AAQToB,MAAAA,mBAAmB,EAAE,MAAK3C,KAAL,CAAWuC,GAAX,CAAehB,YAAf,CAA4BC;AARxC,KAAb;AAWA,UAAKvB,YAAL,GAAoB,MAAKA,YAAL,CAAkB2C,IAAlB,uDAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,uDAAzB;AACA,UAAKG,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BH,IAA7B,uDAA/B;AACA,UAAKI,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBJ,IAAvB,uDAAzB;AACA,UAAKK,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BL,IAA5B,uDAA9B;AAEA,QAAIM,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,MAAKlD,KAAL,CAAWuC,GAAX,CAAehB,YAAf,CAA4BC,MAA5C,EAAoD0B,CAAC,EAArD,EAAyD;AACrD,UAAIC,QAAQ,oBAAaD,CAAb,CAAZ;AACA,YAAK5B,KAAL,CAAWC,YAAX,CAAwB4B,QAAxB,IAAoC,MAAKnD,KAAL,CAAWuC,GAAX,CAAehB,YAAf,CAA4B2B,CAA5B,CAApC;AACH;;AAxBc;AAyBlB,G,CAEL;;;;;kCACkB;AACV,WAAKlB,QAAL,CAAc;AACVoB,QAAAA,SAAS,EAAE,CAAC,KAAK9B,KAAL,CAAW8B;AADb,OAAd;AAGH;;;sCAEiBlD,K,EAAO;AACrB,WAAK8B,QAAL,CAAc;AAACtB,QAAAA,QAAQ,EAAER,KAAK,CAACmD,MAAN,CAAa1C;AAAxB,OAAd;AACH;;;4CAEuBT,K,EAAO;AAC3B,WAAK8B,QAAL,CAAc;AAACjB,QAAAA,cAAc,EAAEb,KAAK,CAACmD,MAAN,CAAa1C;AAA9B,OAAd;AACH;;;sCAEiBT,K,EAAO;AACrB,WAAK8B,QAAL,CAAc;AAAChB,QAAAA,SAAS,EAAEd,KAAK,CAACmD,MAAN,CAAa1C;AAAzB,OAAd;AACH;;;2CAEsBT,K,EAAO;AAC1B,WAAK8B,QAAL,CAAc;AAACb,QAAAA,cAAc,EAAEjB,KAAK,CAACmD,MAAN,CAAa1C;AAA9B,OAAd;AACH,K,CAEL;;;;+BAiEe;AACP,UAAIwC,QAAQ,oBAAa,KAAK7B,KAAL,CAAWqB,mBAAxB,CAAZ;AACA,WAAKrB,KAAL,CAAWC,YAAX,CAAwB4B,QAAxB,IAAoC,EAApC;AACA,WAAKnB,QAAL,CAAc,UAAAsB,SAAS;AAAA,eAAK;AAACX,UAAAA,mBAAmB,EAAEW,SAAS,CAACX,mBAAV,GAAgC;AAAtD,SAAL;AAAA,OAAvB;AACH;;;gCAEWY,K,EAAO;AACf1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA,UAAIC,GAAG,GAAG,KAAKlC,KAAL,CAAWC,YAArB;AACA,aAAOiC,GAAG,CAACD,KAAD,CAAV;AACA,WAAKvB,QAAL,CAAc,UAAAsB,SAAS;AAAA,eAAK;AAAC/B,UAAAA,YAAY,EAAEiC;AAAf,SAAL;AAAA,OAAvB;AACH;;;iCAEYC,C,EAAGF,K,EAAO;AACnB,UAAIC,GAAG,GAAG,KAAKlC,KAAL,CAAWC,YAArB;AACAiC,MAAAA,GAAG,CAACD,KAAD,CAAH,GAAaE,CAAC,CAACJ,MAAF,CAAS1C,KAAtB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY2B,CAAC,CAACJ,MAAF,CAAS1C,KAArB,EAA4B4C,KAA5B;AACA,WAAKvB,QAAL,CAAc,UAAAsB,SAAS;AAAA,eAAK;AAAC/B,UAAAA,YAAY,EAAEiC;AAAf,SAAL;AAAA,OAAvB;AACH;;;6BAGQ;AAAA;;AACL,UAAIE,IAAI,GAAG,IAAX;AACA,aACI;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,EAAE,EAAC,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyD,KAAKpC,KAAL,CAAWZ,QAApE,CADJ,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,IAAI,EAAC,UAAtC;AAAiD,UAAA,KAAK,EAAE,KAAKY,KAAL,CAAWZ,QAAnE;AAA6E,UAAA,QAAQ,EAAE,KAAKoC,iBAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWP,cAArC;AAAqD,UAAA,IAAI,EAAC,gBAA1D;AAA2E,UAAA,WAAW,EAAC,iBAAvF;AACO,UAAA,QAAQ,EAAE,KAAKgC,uBADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAQI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,EASI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,WAAxB;AAAoC,UAAA,WAAW,EAAC,YAAhD;AACO,UAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWN,SADzB;AACoC,UAAA,QAAQ,EAAE,KAAKgC,iBADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ,EAYI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAZJ,EAaI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,gBAAxB;AAAyC,UAAA,WAAW,EAAC,iBAArD;AACO,UAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWH,cADzB;AACyC,UAAA,QAAQ,EAAE,KAAK8B,sBADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAfJ,EAgBI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBJ,EAiBI;AAAK,UAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK7B,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,YAAvB,EAAqCoC,GAArC,CAAyC,UAAUJ,KAAV,EAAiB;AACvD,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAEA,KAAZ;AAAmB,YAAA,EAAE,EAAEA,KAAvB;AAA8B,YAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,qBAAOC,IAAI,CAACE,YAAL,CAAkBH,CAAlB,EAAqBF,KAArB,CAAP;AAAA,aAAxC;AAA4E,YAAA,KAAK,EAAEG,IAAI,CAACpC,KAAL,CAAWC,YAAX,CAAwBgC,KAAxB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,EAII;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAMG,IAAI,CAACG,WAAL,CAAiBN,KAAjB,CAAN;AAAA,aAAjB;AACQ,YAAA,KAAK,EAAC,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAJJ,CADJ,EAUI;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,CADJ;AAcH,SAfA,CADL,CAjBJ,EAmCI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,WAAX;AAAuB,UAAA,IAAI,EAAC,YAA5B;AAAyC,UAAA,WAAW,EAAC,WAArD;AACQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACO,QAAL,EAAN;AAAA,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAKI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CALJ,CAnCJ,EA4CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA5CJ,CAJJ,CADJ,EAqDI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,GAAG,EAAC,YAAX;AAAwB,UAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC9D,YAAL,EAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWmC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJJ,CAFJ,CArDJ,CADJ,CADJ;AAHJ;AA0EH;;;;EArN6BzC,S;;IA0N5BsE,K;;;;;;;;;;;;;6BAEO;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKhE,KAAL,CAAWU,QAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,OAAyB,KAAKV,KAAL,CAAWiE,KAApC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,EAAuB,KAAKjE,KAAL,CAAWkE,KAAlC,CAJJ,EAKI;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAE,KAAKlE,KAAL,CAAWmC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ;AAWH;;;;EAfe1C,KAAK,CAACC,S;;AAmB1B,eAAeK,mBAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport Label from \"reactstrap/es/Label\";\nimport Input from \"reactstrap/es/Input\";\nimport Button from \"reactstrap/es/Button\";\n\n\n//Popup that allows job title and job description to be changed\nclass EditJobPostingPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            job: this.props.job,\n            jobTitle: this.props.job.title,\n            jobDescription: this.props.job.description,\n            startDate: this.props.job.startDate,\n            expirationDate: this.props.job.postingExpirationDate,\n            customFields: {},\n            customFieldValues: this.props.job.customFields,\n            customFieldsCounter: this.props.job.customFields.length\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.togglePopup = this.togglePopup.bind(this);\n        this.handleTitleChange = this.handleTitleChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.handleStartChange = this.handleStartChange.bind(this);\n        this.handleExpirationChange = this.handleExpirationChange.bind(this);\n\n        var i;\n        for (i = 0; i < this.props.job.customFields.length; i++) {\n            let newInput = `custom-${i}`;\n            this.state.customFields[newInput] = this.props.job.customFields[i];\n        }\n    }\n\n//Method to toggle popup window..\n    togglePopup() {\n        this.setState({\n            showPopup: !this.state.showPopup\n        });\n    }\n\n    handleTitleChange(event) {\n        this.setState({jobTitle: event.target.value})\n    }\n\n    handleDescriptionChange(event) {\n        this.setState({jobDescription: event.target.value})\n    }\n\n    handleStartChange(event) {\n        this.setState({startDate: event.target.value})\n    }\n\n    handleExpirationChange(event) {\n        this.setState({expirationDate: event.target.value})\n    }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        // event.preventDefault();\n        // axios.post('http://localhost:3001/updateData', this.state);\n\n        let errorLabel = this.refs.errorLabel;\n        let form = document.forms.namedItem(\"postingInfo\");\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n        var valid = true;\n        if (form.jobTitle.value.trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter a valid job title\";\n            valid = false;\n        } else if (form.jobDescription.value.trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter a valid job description\";\n            valid = false;\n        } else if (form.startDate.value !== \"\") {\n            if (isNaN(new Date(form.startDate.value))) {\n                errorLabel.className = \"invalid\";\n                errorLabel.innerHTML = \"Please enter a valid start date\";\n                valid = false;\n            }\n        }\n        if (form.expirationDate.value !== \"\") {\n            if (isNaN(new Date(form.expirationDate.value))) {\n                errorLabel.className = \"invalid\";\n                errorLabel.innerHTML = \"Please enter a valid expiration date\";\n                valid = false;\n            }\n        }\n        if (Object.keys(this.state.customFields).length > 0) { //Test if made a custom field but left it empty\n            Object.values(this.state.customFields).forEach(function testForEmpty(item) {\n                console.log(item, item.toString(), item.toString().trim() === \"\");\n                if (item.toString().trim() === \"\") {\n                    errorLabel.className = \"invalid\";\n                    errorLabel.innerHTML = \"Please fill out all created custom fields\";\n                    valid = false;\n                }\n            });\n        }\n\n        if (valid) {\n            this.setState({\n                jobTitle: form.jobTitle.value,\n                jobDescription: form.jobDescription.value,\n                startDate: form.startDate.value,\n                expirationDate: form.expirationDate.value,\n                customFieldValues: Object.values(this.state.customFields)\n            }, () => { //callback param ensures that setstate occurs before post\n                //push data via backend\n                console.log('POST');\n                axios.post('http://localhost:3001/updateData', this.state);\n                this.props.closePopup();\n                window.location.reload();\n            });\n        }\n\n\n        //this.props.closePopup();\n    };\n\n    addField() {\n        let newInput = `custom-${this.state.customFieldsCounter}`;\n        this.state.customFields[newInput] = \"\";\n        this.setState(prevState => ({customFieldsCounter: prevState.customFieldsCounter + 1}));\n    }\n\n    deleteInput(input) {\n        console.log(input);\n        let arr = this.state.customFields;\n        delete arr[input];\n        this.setState(prevState => ({customFields: arr}));\n    }\n\n    handleChange(e, input) {\n        let arr = this.state.customFields;\n        arr[input] = e.target.value;\n        console.log(e.target.value, input);\n        this.setState(prevState => ({customFields: arr}));\n    }\n\n\n    render() {\n        let self = this;\n        return (\n            //Form elements with labels and inputs for job title and job description\n\n            <div>\n                <div className='popup'>\n                    <div className='popup_inner'>\n                        <form name=\"postingInfo\" id=\"editable-posting-form\">\n                            <div className=\"header\">\n                                <div className=\"vertical-center horizontal-center\">Edit {this.state.jobTitle}</div>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label>Job Title</Label>\n                                <Input type=\"text\" id=\"jobTitle\" name=\"jobTitle\" value={this.state.jobTitle} onChange={this.handleTitleChange}/>\n                                <br/>\n                                <Label>Job Description</Label>\n                                <Input type=\"text\" value={this.state.jobDescription} name=\"jobDescription\" placeholder=\"Job Description\"\n                                       onChange={this.handleDescriptionChange}/>\n                                <br/>\n                                <Label>Start Date</Label>\n                                <Input type=\"date\" name=\"startDate\" placeholder=\"Start Date\"\n                                       value={this.state.startDate} onChange={this.handleStartChange}/>\n                                <br/>\n                                <Label>Expiration Date</Label>\n                                <Input type=\"date\" name=\"expirationDate\" placeholder=\"Expiration Date\"\n                                       value={this.state.expirationDate} onChange={this.handleExpirationChange}/>\n                                <br/>\n                                <Label>Custom Fields</Label>\n                                <div id=\"fields\">\n                                    {Object.keys(this.state.customFields).map(function (input) {\n                                        return (\n                                            <div>\n                                                <div className=\"row\">\n                                                    <div className=\"col text-right\">\n                                                        <Input key={input} id={input} onChange={(e) => self.handleChange(e, input)} value={self.state.customFields[input]}/>\n                                                    </div>\n                                                    <div className=\"col-sm-3 text-right\">\n                                                        <Button onClick={() => self.deleteInput(input)}\n                                                                color=\"danger\">Delete</Button>\n                                                    </div>\n                                                </div>\n                                                <br className=\"inputBr\"/>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-sm-3 text-right\">\n                                        <Button id=\"addCustom\" name=\"Add Custom\" placeholder=\"Add Field\"\n                                                onClick={() => this.addField()}>Add Field</Button>\n                                    </div>\n                                    <div className=\"col text-left\">\n                                        <Label style={{opacity: 0}}> </Label>\n                                    </div>\n                                </div>\n                                <br/>\n                            </div>\n\n                        </form>\n                        <div className=\"bottomButtons\">\n                            <label ref=\"errorLabel\" className=\"valid\"> </label>\n                            <div className=\"row\">\n                                <div className=\"col text-right\">\n                                    <Button onClick={() => this.handleSubmit()}>Save</Button>\n                                </div>\n                                <div className=\"col text-left\">\n                                    <Button id=\"closeButton\" onClick={this.props.closePopup}>Close</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\nclass Popup extends React.Component {\n\n    render() {\n\n        return (\n            <div className='popup'>\n                <div className='popup_inner'>\n                    <h1>Posting Preview</h1>\n                    <h2>{this.props.jobTitle}</h2>\n                    <h4><b>First Name: </b> {this.props.fname}</h4>\n                    <h4><b>Last Name: </b>{this.props.lname}</h4>\n                    <button id=\"closeButton\" onClick={this.props.closePopup}>Done</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default EditJobPostingPopup;\n"]},"metadata":{},"sourceType":"module"}