{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/src/client/Components/JobPosting.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar JobPosting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JobPosting, _Component);\n\n  function JobPosting(props) {\n    var _this;\n\n    _classCallCheck(this, JobPosting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobPosting).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var form = document.forms.postingInfo; //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      console.log(form.jobTitle.value, form.jobDescription.value);\n\n      _this.setState(function (prev) {\n        return {\n          jobTitle: form.jobTitle.value,\n          jobDescription: form.jobDescription.value\n        };\n      }); //document.getElementById(\"posting-form\").reset();\n\n\n      console.log(_this.state); //push data via backend\n\n      axios.post('http://localhost:3001/putData', _this.state);\n    };\n\n    _this.state = {\n      postingID: Math.floor(Math.random() * 100),\n      managerID: 22,\n      jobTitle: '',\n      jobDescription: '',\n      companyID: 1,\n      postingDate: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\n      showPopup: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Method to toggle popup window\n\n\n  _createClass(JobPosting, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          name: \"postingInfo\",\n          onSubmit: this.handleSubmit,\n          id: \"posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Post a Job\"), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: \"jobTitle\",\n          placeholder: \"Job Title\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"jobDescription\",\n          placeholder: \"Job Description\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.togglePopup.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \" Submit Job Posting\"))), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Form Data (Not to be used in production. For Information Purposes only)\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Posting ID: \"), \" \", this.state.postingID, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Manager ID: \"), this.state.managerID, \"  \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, this.state.jobTitle), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, this.state.jobDescription), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Company ID: \"), this.state.companyID, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Posting Date: \"), this.state.postingDate), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Format Data as a JSON File\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, JSON.stringify(this.state, null, 2))), this.state.showPopup ? React.createElement(Popup, {\n          jobTitle: this.state.jobTitle,\n          jobDescription: this.state.jobDescription,\n          postingID: this.state.postingID,\n          postingDate: this.state.postingDate,\n          managerID: this.state.managerID,\n          closePopup: this.togglePopup.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }) : null)\n      );\n    }\n  }]);\n\n  return JobPosting;\n}(Component);\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Posting Preview\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.jobTitle), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Posting ID: \"), \" \", this.props.postingID), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Date Posted: \"), this.props.postingDate), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Posted by Manager:\"), \" \", this.props.managerID), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.props.jobDescription), React.createElement(\"button\", {\n        id: \"closeButton\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nexport default JobPosting;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4/ultimate-hiring-app/src/client/Components/JobPosting.js"],"names":["React","Component","axios","JobPosting","props","handleSubmit","event","preventDefault","form","document","forms","postingInfo","console","log","jobTitle","value","jobDescription","setState","prev","state","post","postingID","Math","floor","random","managerID","companyID","postingDate","Date","toJSON","slice","replace","showPopup","bind","togglePopup","text","JSON","stringify","Popup","closePopup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\n\n\nclass JobPosting extends Component{\n  constructor(props){\n      super(props);\n      this.state = {\n          postingID: Math.floor(Math.random()*100),\n          managerID: 22,\n          jobTitle: '',\n          jobDescription: '',\n          companyID: 1,\n          postingDate:  new Date().toJSON().slice(0,10).replace(/-/g,'/'),\n          showPopup: false,\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.togglePopup = this.togglePopup.bind(this);\n\n  }\n\n//Method to toggle popup window\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let form = document.forms.postingInfo;\n\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n        console.log(form.jobTitle.value,form.jobDescription.value);\n\n        this.setState(prev => ({\n          jobTitle: form.jobTitle.value,\n          jobDescription: form.jobDescription.value\n      }));\n      //document.getElementById(\"posting-form\").reset();\n\n        console.log(this.state);\n        //push data via backend\n        axios.post('http://localhost:3001/putData', this.state)\n      }\n\n\n  render(){\n\n      return(\n        //Form elements with labels and inputs for job title and job description\n        <div>\n          <form name=\"postingInfo\" onSubmit={this.handleSubmit} id=\"posting-form\">\n          <div className=\"header\">Post a Job</div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"jobTitle\" placeholder=\"Job Title\" value ={this.state.text}/>\n              <input type=\"text\" name=\"jobDescription\" placeholder=\"Job Description\" value ={this.state.text}/>\n              <button onClick ={this.togglePopup.bind(this)}> Submit Job Posting</button>\n            </div>\n          </form>\n\n\n        <h6>Form Data (Not to be used in production. For Information Purposes only)</h6>\n        <div><b>Posting ID: </b> {this.state.postingID} </div>\n        <div ><b>Manager ID: </b>{this.state.managerID}  </div>\n        <div >{this.state.jobTitle}</div>\n        <div >{this.state.jobDescription}</div>\n        <div ><b>Company ID: </b>{this.state.companyID} </div>\n        <div ><b>Posting Date: </b>{this.state.postingDate}</div>\n        <h6>Format Data as a JSON File</h6>\n        <div><pre>{JSON.stringify(this.state, null, 2) }</pre></div>\n\n        {this.state.showPopup ?\n          <Popup\n            jobTitle={this.state.jobTitle}\n            jobDescription = {this.state.jobDescription}\n            postingID = {this.state.postingID}\n            postingDate ={this.state.postingDate}\n            managerID = {this.state.managerID}\n            closePopup={this.togglePopup.bind(this)}\n          />\n          : null\n        }\n    </div>\n\n  );\n  }\n\n\n\n\n}\n\nclass Popup extends React.Component {\n\n  render() {\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n        <h1>Posting Preview</h1>\n          <h2>{this.props.jobTitle}</h2>\n          <h4><b>Posting ID: </b> {this.props.postingID}</h4>\n          <h4><b>Date Posted: </b>{this.props.postingDate}</h4>\n          <h4><b>Posted by Manager:</b> {this.props.managerID}</h4>\n          <h3>{this.props.jobDescription}</h3>\n          <button id =\"closeButton\" onClick={this.props.closePopup}>Done</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default JobPosting;\n"]},"metadata":{},"sourceType":"module"}