{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/JobPostingPopup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar JobPostingPopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JobPostingPopup, _Component);\n\n  function JobPostingPopup(props) {\n    var _this;\n\n    _classCallCheck(this, JobPostingPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobPostingPopup).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var form = document.forms.postingInfo;\n      console.log(form.jobTitle.value); //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      _this.setState({\n        fname: form.fname.value,\n        lname: form.lname.value\n      }, function () {\n        //callback param ensures that setstate occurs before post\n        //push data via backend\n        console.log('POST');\n        axios.post('http://localhost:3001/putData', _this.state);\n\n        _this.props.closePopup();\n      }); //document.getElementById(\"posting-form\").reset();\n\n    };\n\n    _this.state = {\n      fname: '',\n      lname: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Method to toggle popup window..\n\n\n  _createClass(JobPostingPopup, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      console.log(\"TOGGLE\");\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"return (\", React.createElement(\"div\", {\n          className: \"popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup_inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          name: \"postingInfo\",\n          onSubmit: this.handleSubmit,\n          id: \"posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Apply For Job\"), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: \"fname\",\n          placeholder: \"First Name\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"lname\",\n          placeholder: \"Last Name\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit Application\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          id: \"closeButton\",\n          onClick: this.props.closePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Close\"))))), \");\")\n      );\n    }\n  }]);\n\n  return JobPostingPopup;\n}(Component);\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Posting Preview\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.jobTitle), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"First Name: \"), \" \", this.props.fname), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Last Name: \"), this.props.lname), React.createElement(\"button\", {\n        id: \"closeButton\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nexport default JobPostingPopup;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/JobPostingPopup.js"],"names":["React","Component","axios","JobPostingPopup","props","handleSubmit","event","preventDefault","form","document","forms","postingInfo","console","log","jobTitle","value","setState","fname","lname","post","state","closePopup","bind","togglePopup","showPopup","text","Popup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\n\n\nclass JobPostingPopup extends Component{\n  constructor(props){\n      super(props);\n      this.state = {\n          fname: '',\n          lname: '',\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.togglePopup = this.togglePopup.bind(this);\n\n  }\n\n//Method to toggle popup window..\n  togglePopup() {\n    console.log(\"TOGGLE\")\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let form = document.forms.postingInfo;\n        console.log(form.jobTitle.value)\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n        this.setState({\n          fname: form.fname.value,\n          lname: form.lname.value,\n      },() => { //callback param ensures that setstate occurs before post\n        //push data via backend\n        console.log('POST')\n        axios.post('http://localhost:3001/putData', this.state)\n        this.props.closePopup()\n      });\n      //document.getElementById(\"posting-form\").reset();\n\n      }\n\n\n  render(){\n\n      return(\n        //Form elements with labels and inputs for job title and job description\n        <div>\n      return (\n      <div className='popup'>\n        <div className='popup_inner'>\n        <form name=\"postingInfo\" onSubmit={this.handleSubmit} id=\"posting-form\">\n          <div className=\"header\">Apply For Job</div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"fname\" placeholder=\"First Name\" value ={this.state.text}/>\n              <input type=\"text\" name=\"lname\" placeholder=\"Last Name\" value ={this.state.text}/>\n              <br></br>\n              <input type=\"submit\" value=\"Submit Application\" />\n              <button id =\"closeButton\" onClick={this.props.closePopup}>Close</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n    </div>\n\n  );\n  }\n\n\n\n\n}\n\nclass Popup extends React.Component {\n\n  render() {\n\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n        <h1>Posting Preview</h1>\n          <h2>{this.props.jobTitle}</h2>\n          <h4><b>First Name: </b> {this.props.fname}</h4>\n          <h4><b>Last Name: </b>{this.props.lname}</h4>\n          <button id =\"closeButton\" onClick={this.props.closePopup}>Done</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default JobPostingPopup;\n"]},"metadata":{},"sourceType":"module"}