{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/ManagerViewComponents/PostJobComponents/PostJobPopup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Input from \"reactstrap/es/Input\";\nimport Label from \"reactstrap/es/Label\";\nimport Button from \"reactstrap/es/Button\";\nimport JobView from \"../../LandingPageComponents/JobView\";\n\nvar PostJobPopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostJobPopup, _Component);\n\n  function PostJobPopup(props) {\n    var _this;\n\n    _classCallCheck(this, PostJobPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostJobPopup).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      //event.preventDefault();\n      var errorLabel = _this.refs.errorLabel;\n      var form = document.forms.namedItem(\"postingInfo\"); //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      var valid = true;\n\n      if (form.jobTitle.value.trim() === \"\") {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter a valid job title\";\n        valid = false;\n      } else if (form.jobDescription.value.trim() === \"\") {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter a valid job description\";\n        valid = false;\n      } else if (form.startDate.value !== \"\") {\n        if (isNaN(new Date(form.startDate.value))) {\n          errorLabel.className = \"invalid\";\n          errorLabel.innerHTML = \"Please enter a valid start date\";\n          valid = false;\n        }\n      }\n\n      if (form.expirationDate.value !== \"\") {\n        if (isNaN(new Date(form.expirationDate.value))) {\n          errorLabel.className = \"invalid\";\n          errorLabel.innerHTML = \"Please enter a valid expiration date\";\n          valid = false;\n        }\n      }\n\n      if (Object.keys(_this.state.customFields).length > 0) {\n        //Test if made a custom field but left it empty\n        Object.values(_this.state.customFields).forEach(function testForEmpty(item) {\n          console.log(item, item.toString(), item.toString().trim() === \"\");\n\n          if (item.toString().trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please fill out all created custom fields\";\n            valid = false;\n          }\n        });\n      }\n\n      if (valid) {\n        _this.setState({\n          jobTitle: form.jobTitle.value,\n          jobDescription: form.jobDescription.value,\n          startDate: form.startDate.value,\n          expirationDate: form.expirationDate.value,\n          customFieldValues: Object.values(_this.state.customFields)\n        }, function () {\n          //callback param ensures that setstate occurs before post\n          //push data via backend\n          console.log('POST');\n          axios.post(\"http://\" + JobView.ip + \":3001/putData\", _this.state);\n\n          _this.props.closePopup();\n        });\n      } //document.getElementById(\"posting-form\").reset();\n\n    };\n\n    _this.state = {\n      postingID: Math.floor(Math.random() * 100),\n      managerID: 22,\n      jobTitle: '',\n      jobDescription: '',\n      companyID: 1,\n      postingDate: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),\n      showPopup: false,\n      startDate: null,\n      expirationDate: null,\n      customFields: {},\n      customFieldValues: [],\n      customFieldsCounter: 0\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Method to toggle popup window..\n\n\n  _createClass(PostJobPopup, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      console.log(\"TOGGLE\");\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"addField\",\n    value: function addField() {\n      var newInput = \"custom-\".concat(this.state.customFieldsCounter);\n      this.state.customFields[newInput] = \"\";\n      this.setState(function (prevState) {\n        return {\n          customFieldsCounter: prevState.customFieldsCounter + 1\n        };\n      });\n    }\n  }, {\n    key: \"deleteInput\",\n    value: function deleteInput(input) {\n      console.log(input);\n      var arr = this.state.customFields;\n      delete arr[input];\n      this.setState(function (prevState) {\n        return {\n          customFields: arr\n        };\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, input) {\n      var arr = this.state.customFields;\n      arr[input] = e.target.value;\n      this.setState(function (prevState) {\n        return {\n          customFields: arr\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          className: \"popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup_inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"vertical-center horizontal-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Post a Job\")), React.createElement(\"form\", {\n          name: \"postingInfo\",\n          id: \"posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Job Title\", React.createElement(\"span\", {\n          className: \"required-Field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"*\")), React.createElement(Input, {\n          type: \"text\",\n          id: \"jobTitle\",\n          name: \"jobTitle\",\n          placeholder: \"Job Title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, this.state.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Job Description\", React.createElement(\"span\", {\n          className: \"required-Field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"*\")), React.createElement(Input, {\n          type: \"text\",\n          name: \"jobDescription\",\n          placeholder: \"Job Description\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Start Date\"), React.createElement(Input, {\n          type: \"date\",\n          name: \"startDate\",\n          placeholder: \"Start Date\",\n          value: this.state.startDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Expiration Date\"), React.createElement(Input, {\n          type: \"date\",\n          name: \"expirationDate\",\n          placeholder: \"Expiration Date\",\n          value: this.state.expirationDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Custom Fields\"), React.createElement(\"div\", {\n          id: \"fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, Object.keys(this.state.customFields).map(function (input) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(Input, {\n            key: input,\n            id: input,\n            onChange: function onChange(e) {\n              return self.handleChange(e, input);\n            },\n            value: self.state.customFields[input],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col-sm-3 text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, React.createElement(Button, {\n            onClick: function onClick() {\n              return self.deleteInput(input);\n            },\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, \"Delete\"))), React.createElement(\"br\", {\n            className: \"inputBr\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }));\n        })), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-3 text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"addCustom\",\n          name: \"Add Custom\",\n          placeholder: \"Add Field\",\n          onClick: function onClick() {\n            return _this2.addField();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Add Field\")), React.createElement(\"div\", {\n          className: \"col text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Label, {\n          style: {\n            opacity: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \" \"))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"bottomButtons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          ref: \"errorLabel\",\n          className: \"valid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \" \"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Submit\")), React.createElement(\"div\", {\n          className: \"col text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"closeButton\",\n          onClick: this.props.closePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Close\"))))))\n      );\n    }\n  }]);\n\n  return PostJobPopup;\n}(Component);\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Posting Preview\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.props.jobTitle), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Posting ID: \"), \" \", this.props.postingID), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Date Posted: \"), this.props.postingDate), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Posted by Manager:\"), \" \", this.props.managerID), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.props.jobDescription), React.createElement(\"button\", {\n        id: \"closeButton\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Done\")));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nexport default PostJobPopup;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/ManagerViewComponents/PostJobComponents/PostJobPopup.js"],"names":["React","Component","axios","Input","Label","Button","JobView","PostJobPopup","props","handleSubmit","event","errorLabel","refs","form","document","forms","namedItem","valid","jobTitle","value","trim","className","innerHTML","jobDescription","startDate","isNaN","Date","expirationDate","Object","keys","state","customFields","length","values","forEach","testForEmpty","item","console","log","toString","setState","customFieldValues","post","ip","closePopup","postingID","Math","floor","random","managerID","companyID","postingDate","toJSON","slice","replace","showPopup","customFieldsCounter","bind","togglePopup","newInput","prevState","input","arr","e","target","self","text","map","handleChange","deleteInput","addField","opacity","Popup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport Input from \"reactstrap/es/Input\";\nimport Label from \"reactstrap/es/Label\";\nimport Button from \"reactstrap/es/Button\";\nimport JobView from \"../../LandingPageComponents/JobView\"\n\nclass PostJobPopup extends Component{\n  constructor(props){\n      super(props);\n      this.state = {\n          postingID: Math.floor(Math.random()*100),\n          managerID: 22,\n          jobTitle: '',\n          jobDescription: '',\n          companyID: 1,\n          postingDate:  new Date().toJSON().slice(0,10).replace(/-/g,'/'),\n          showPopup: false,\n          startDate: null,\n          expirationDate: null,\n          customFields: {},\n          customFieldValues: [],\n          customFieldsCounter: 0\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.togglePopup = this.togglePopup.bind(this);\n\n  }\n\n//Method to toggle popup window..\n  togglePopup() {\n    console.log(\"TOGGLE\");\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        //event.preventDefault();\n        let errorLabel = this.refs.errorLabel;\n        let form = document.forms.namedItem(\"postingInfo\");\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n        var valid = true;\n        if (form.jobTitle.value.trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter a valid job title\";\n            valid = false;\n        } else if (form.jobDescription.value.trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter a valid job description\";\n            valid = false;\n        } else if (form.startDate.value !== \"\") {\n            if (isNaN(new Date(form.startDate.value))) {\n                errorLabel.className = \"invalid\";\n                errorLabel.innerHTML = \"Please enter a valid start date\";\n                valid = false;\n            }\n        }\n        if (form.expirationDate.value !== \"\") {\n            if (isNaN(new Date(form.expirationDate.value))) {\n                errorLabel.className = \"invalid\";\n                errorLabel.innerHTML = \"Please enter a valid expiration date\";\n                valid = false;\n            }\n        }\n        if (Object.keys(this.state.customFields).length > 0) { //Test if made a custom field but left it empty\n            Object.values(this.state.customFields).forEach(function testForEmpty(item) {\n                console.log(item, item.toString(), item.toString().trim() === \"\");\n                if (item.toString().trim() === \"\") {\n                    errorLabel.className = \"invalid\";\n                    errorLabel.innerHTML = \"Please fill out all created custom fields\";\n                    valid = false;\n                }\n            });\n        }\n\n        if (valid) {\n            this.setState({\n                jobTitle: form.jobTitle.value,\n                jobDescription: form.jobDescription.value,\n                startDate: form.startDate.value,\n                expirationDate: form.expirationDate.value,\n                customFieldValues: Object.values(this.state.customFields)\n            }, () => { //callback param ensures that setstate occurs before post\n                //push data via backend\n                console.log('POST');\n                axios.post(\"http://\"+JobView.ip+\":3001/putData\", this.state);\n                this.props.closePopup()\n            });\n        }\n        //document.getElementById(\"posting-form\").reset();\n\n      };\n\n    addField() {\n        let newInput = `custom-${this.state.customFieldsCounter}`;\n        this.state.customFields[newInput] = \"\";\n        this.setState(prevState => ({customFieldsCounter: prevState.customFieldsCounter + 1}));\n    }\n\n    deleteInput(input) {\n        console.log(input);\n        let arr = this.state.customFields;\n        delete arr[input];\n        this.setState(prevState => ({customFields: arr}));\n    }\n\n    handleChange(e, input) {\n        let arr = this.state.customFields;\n        arr[input] = e.target.value;\n        this.setState(prevState => ({customFields: arr}));\n    }\n\n    render() {\n        let self = this;\n        return (\n            //Form elements with labels and inputs for job title and job description\n            <div className='popup'>\n                <div className='popup_inner'>\n                    <div className=\"header\"><div className=\"vertical-center horizontal-center\">Post a Job</div></div>\n                    <form name=\"postingInfo\" id=\"posting-form\">\n\n                        <div className=\"form-group\">\n                            <Label>Job Title<span className=\"required-Field\">*</span></Label>\n                            <Input type=\"text\" id=\"jobTitle\" name=\"jobTitle\"\n                                   placeholder=\"Job Title\">{this.state.text}</Input>\n                            <br/>\n                            <Label>Job Description<span className=\"required-Field\">*</span></Label>\n                            <Input type=\"text\" name=\"jobDescription\" placeholder=\"Job Description\"\n                                   value={this.state.text}/>\n                            <br/>\n                            <Label>Start Date</Label>\n                            <Input type=\"date\" name=\"startDate\" placeholder=\"Start Date\" value={this.state.startDate}/>\n                            <br/>\n                            <Label>Expiration Date</Label>\n                            <Input type=\"date\" name=\"expirationDate\" placeholder=\"Expiration Date\"\n                                   value={this.state.expirationDate}/>\n                            <br/>\n                            <Label>Custom Fields</Label>\n                            <div id=\"fields\">\n                                {Object.keys(this.state.customFields).map(function (input) {\n                                    return (\n                                        <div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-right\">\n                                                    <Input key={input} id={input} onChange={(e) => self.handleChange(e, input)} value={self.state.customFields[input]}/>\n                                                </div>\n                                                <div className=\"col-sm-3 text-right\">\n                                                    <Button onClick={() => self.deleteInput(input)}\n                                                            color=\"danger\">Delete</Button>\n                                                </div>\n                                            </div>\n                                            <br className=\"inputBr\"/>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-3 text-right\">\n                                    <Button id=\"addCustom\" name=\"Add Custom\" placeholder=\"Add Field\"\n                                            onClick={() => this.addField()}>Add Field</Button>\n                                </div>\n                                <div className=\"col text-left\">\n                                    <Label style={{opacity: 0}}> </Label>\n                                </div>\n                            </div>\n                            <br/>\n                        </div>\n\n\n                    </form>\n                    <div className=\"bottomButtons\">\n                        <label ref=\"errorLabel\" className=\"valid\"> </label>\n                        <div className=\"row\">\n                            <div className=\"col text-right\">\n                                <Button onClick={() => this.handleSubmit()}>Submit</Button>\n                            </div>\n                            <div className=\"col text-left\">\n                                <Button id=\"closeButton\" onClick={this.props.closePopup}>Close</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\nclass Popup extends React.Component {\n\n    render() {\n\n        return (\n            <div className='popup'>\n                <div className='popup_inner'>\n                    <h1>Posting Preview</h1>\n                    <h2>{this.props.jobTitle}</h2>\n                    <h4><b>Posting ID: </b> {this.props.postingID}</h4>\n                    <h4><b>Date Posted: </b>{this.props.postingDate}</h4>\n                    <h4><b>Posted by Manager:</b> {this.props.managerID}</h4>\n                    <h3>{this.props.jobDescription}</h3>\n                    <button id=\"closeButton\" onClick={this.props.closePopup}>Done</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default PostJobPopup;\n"]},"metadata":{},"sourceType":"module"}