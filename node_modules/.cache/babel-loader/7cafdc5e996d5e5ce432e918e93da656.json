{"ast":null,"code":"import _classCallCheck from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/LandingPageComponents/JobPostingPopup.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Input from \"reactstrap/es/Input\";\nimport Button from \"reactstrap/es/Button\";\nimport Label from \"reactstrap/es/Label\";\n\nvar JobPostingPopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JobPostingPopup, _Component);\n\n  function JobPostingPopup(props) {\n    var _this;\n\n    _classCallCheck(this, JobPostingPopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobPostingPopup).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var errorLabel = _this.refs.errorLabel;\n      var form = document.forms.namedItem(\"postingInfo\"); //format data according to data dump\n      //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n      //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n      var valid = true;\n\n      if (form.fname.value.trim() === \"\") {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter your first name\";\n        valid = false;\n      } else if (form.lname.value.trim() === \"\") {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter your last name\";\n        valid = false;\n      } else if (form.email.value.trim() === \"\" || !_this.validateEmail(form.email.value)) {\n        errorLabel.className = \"invalid\";\n        errorLabel.innerHTML = \"Please enter a valid email\";\n        valid = false;\n      }\n\n      if (valid) {\n        _this.setState({\n          fname: form.fname.value,\n          lname: form.lname.value,\n          email: form.email.value\n        }, function () {\n          //callback param ensures that setstate occurs before post\n          //push data via backend\n          console.log(_this.state.fname);\n          axios.post('http://localhost:3001/putApp', _this.state);\n\n          _this.props.closePopup();\n        });\n      } //document.getElementById(\"posting-form\").reset();\n\n    };\n\n    _this.state = {\n      fname: '',\n      lname: '',\n      email: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopup = _this.togglePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Method to toggle popup window..\n\n\n  _createClass(JobPostingPopup, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    } //Method for action after hitting the submit button\n\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.job);\n      return (//Form elements with labels and inputs for job title and job description\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"popup_inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          name: \"postingInfo\",\n          id: \"posting-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"vertical-center horizontal-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Apply For \", this.props.job.title)), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"First Name\", React.createElement(\"span\", {\n          className: \"required-Field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"*\")), React.createElement(Input, {\n          type: \"text\",\n          name: \"fname\",\n          placeholder: \"First Name\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Last Name\", React.createElement(\"span\", {\n          className: \"required-Field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"*\")), React.createElement(Input, {\n          type: \"text\",\n          name: \"lname\",\n          placeholder: \"Last Name\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Email\", React.createElement(\"span\", {\n          className: \"required-Field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"*\")), React.createElement(Input, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"tblessing@umass.edu\",\n          value: this.state.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"bottomButtons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          ref: \"errorLabel\",\n          className: \"valid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \" \"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"submitButton\",\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Submit Application\")), React.createElement(\"div\", {\n          className: \"col text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Button, {\n          id: \"closeButton\",\n          onClick: this.props.closePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Close\")))))))\n      );\n    }\n  }]);\n\n  return JobPostingPopup;\n}(Component);\n\nexport default JobPostingPopup;","map":{"version":3,"sources":["/Users/maxwellhubbard/OneDrive/320-team-4-MHubs/src/client/Components/LandingPageComponents/JobPostingPopup.js"],"names":["React","Component","axios","Input","Button","Label","JobPostingPopup","props","handleSubmit","event","preventDefault","errorLabel","refs","form","document","forms","namedItem","valid","fname","value","trim","className","innerHTML","lname","email","validateEmail","setState","console","log","state","post","closePopup","bind","togglePopup","showPopup","re","test","String","toLowerCase","job","title","text"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport Input from \"reactstrap/es/Input\";\nimport Button from \"reactstrap/es/Button\";\nimport Label from \"reactstrap/es/Label\";\n\n\nclass JobPostingPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fname: '',\n            lname: '',\n            email: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.togglePopup = this.togglePopup.bind(this);\n\n    }\n\n//Method to toggle popup window..\n    togglePopup() {\n        this.setState({\n            showPopup: !this.state.showPopup\n        });\n    }\n\n//Method for action after hitting the submit button\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let errorLabel = this.refs.errorLabel;\n        let form = document.forms.namedItem(\"postingInfo\");\n        //format data according to data dump\n        //NOTE: data dump doesn't include posting ID. I'm wondering if we need it or if we'll always query by manager id and position title\n        //for example, an employee wouldn't apply for a posting. They'd apply to a title. Then positions would be filled as they're filled\n\n        var valid = true;\n        if (form.fname.value.trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter your first name\";\n            valid = false;\n        } else\n        if (form.lname.value.trim() === \"\") {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter your last name\";\n            valid = false;\n        } else\n        if (form.email.value.trim() === \"\" || !this.validateEmail(form.email.value)) {\n            errorLabel.className = \"invalid\";\n            errorLabel.innerHTML = \"Please enter a valid email\";\n            valid = false;\n        }\n\n\n        if (valid) {\n\n            this.setState({\n                fname: form.fname.value,\n                lname: form.lname.value,\n                email: form.email.value\n            }, () => { //callback param ensures that setstate occurs before post\n                //push data via backend\n                console.log(this.state.fname);\n                axios.post('http://localhost:3001/putApp', this.state);\n                this.props.closePopup();\n            });\n        }\n        //document.getElementById(\"posting-form\").reset();\n\n    };\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n\n    render() {\n        console.log(this.props.job);\n        return (\n            //Form elements with labels and inputs for job title and job description\n            <div>\n                <div className='popup'>\n                    <div className='popup_inner'>\n                        <form name=\"postingInfo\" id=\"posting-form\">\n                            <div className=\"header\">\n                                <div className=\"vertical-center horizontal-center\">Apply For {this.props.job.title}</div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div >\n                                <Label>First Name<span className=\"required-Field\">*</span></Label>\n                                <Input type=\"text\" name=\"fname\" placeholder=\"First Name\" value={this.state.text}/>\n                                <br/>\n                                <Label>Last Name<span className=\"required-Field\">*</span></Label>\n                                <Input type=\"text\" name=\"lname\" placeholder=\"Last Name\" value={this.state.text}/>\n                                <br/>\n                                <Label>Email<span className=\"required-Field\">*</span></Label>\n                                <Input type=\"email\" name=\"email\" placeholder=\"tblessing@umass.edu\" value={this.state.text}/>\n                                <br/>\n                                </div>\n                            </div>\n\n                        </form>\n                        <div className=\"bottomButtons\">\n                            <label ref=\"errorLabel\" className=\"valid\"> </label>\n                            <div className=\"row\">\n                                <div className=\"col text-right\">\n                                    <Button id=\"submitButton\" onClick={this.handleSubmit}>Submit Application</Button>\n                                </div>\n                                <div className=\"col text-left\">\n                                    <Button id=\"closeButton\" onClick={this.props.closePopup}>Close</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default JobPostingPopup;\n"]},"metadata":{},"sourceType":"module"}